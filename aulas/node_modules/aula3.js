/*
Process - instância de um determinado programa em execução.
node.js fornece uma variavel que retorna todos os processos em execução no SO.

Retorna um array com as chaves do objeto de variaveis globais
*/
/*
Object.keys(global).forEach(function (value){
    console.log(value);
});
*/
/*
Retorna um array com as chaves do objeto de processos
*/
/*
Object.keys(process).forEach(function (value){
    console.log(value);
});
*/
/*
Aceder aos argumentos dos processos capturando os argumentos da linha de comandos com 'argv'
*/
/*
process.argv.forEach(function(value){
    console.log(value);
});
*/
/*
O método slice() -> retorna elementos selecionados de um array, esse retorno é um novo objeto do tipo arrayde 0 a 2 -> slace(0,2)
*/
/*
var ajuda = require("./ajuda.js");
var options = process.argv.slice(2);
console.log(options);
if(options.length < 1){
    ajuda.mostrarAjuda();
    return;
}
switch(options[0]){
    case 'pid':
        console.log('pid: '+process.pid);
        break;
    case 'arch':
        console.log('arch: '+process.arch);
        break;
    case 'platform':
        console.log('platform: '+process.platform);
        break;
    default:
        ajuda.mostrarAjuda();
}
*/

var minhaConsola = {
    log: function(msg){
        process.stdout.write(msg+'\n');
    },
    error: function(msg){
        process.stderr.write(msg+'\n');
    }
}
/*
module.exports.minhaConsola_ = minhaConsola;
*/
//Leitura via teclado
minhaConsola.log("Ola plz nome: ")
process.stdin.on('readable', function(){
    var cLido = process.stdin.read();
    console.log("O texto-> "+cLido.toString());
});