/*

No node.js existe uma relação entre arquivo e módulos, 
isto é um arquivo poderá ser um módulo para um determinado projeto.

A função require é responsavel por retornar o que foi exportado
de um determinado modulo.

*/

const TESTING = 0;
if(TESTING)
{
    var br = function()
    {
        console.log('\n');
    }

    br();
    console.log('Olá Leonardo');


    var numMax = 2000;
    console.log("O número máximo é " + numMax);


    var generate = function()
    {
        console.log("O número máximo dentro da função é " + numMax);
        return Math.floor(Math.random()*numMax);
    }
    var random = generate();
    console.log(random);
    br();


    function Lista(nome)
    {
        this.nome = nome;
    }
    var afonso = new Lista("Afonso");
    console.table(afonso);

    // module.exports, exports ou this
    var test = (module.exports === exports);
    console.log(test);
    var test2 = (module.exports === this);
    console.log(test2);
    var test3 = (exports === this);
    console.log(test3);
    br();
}

// Export biblioteca
var numMax = 2000;
const EX = "none";

if(EX == "function")
{
    var x = "module.exports";
    switch(x) //Funcionando
    {
        case "module.exports":
            module.exports.generate = () => Math.floor(Math.random()*numMax);
            break;
        case "exports":
            exports.generate = () => Math.floor(Math.random()*numMax);
            break;
        case "this":
            this.generate = () => Math.floor(Math.random()*numMax);
            break;
    }
}
else if(EX == "object")
{
    module.exports = {
        max:numMax
    }
}

/*

Localização de um determinado módulo:
O algoritmo tenta encontrar um módulo de core: net, stream, os, vm, util, etc.

Se encontra core para.
Caso não encontre a busca será numa pasta node_modules.

Require usa sistema de cache, antes de tentar carregar verificar cache

*/

// Exportar objetos

var generate = function(max = numMax)
{
    return Math.floor(Math.random()*max);
}
/*
module.exports = {
    generate: generate
}
*/

var criarNumGenerator = function()
{
    return {
        generate: generate
    }
}
module.exports = criarNumGenerator();

/*
    Função construtora
*/
const NMAX = 1000;
var NumGenerator = function()
{
    this.public = "var publica";
    var private = "var privada";
    this.generate = () => Math.floor(Math.random()*NMAX);
    console.log('Criação');
}
module.exports = NumGenerator;